#!/usr/bin/env ruby
lib = File.expand_path('../../lib', __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)
require 'optparse'
require 'squasher'

options = {}
parser = OptionParser.new do |config|
  config.on('-v', '--version', '-h', '--help')

  config.on('-d', '--dry') do
    options[:dry] = true
  end

  config.on('-r', '--reuse') do
    options[:reuse] = true
  end

  config.on('-e') do
    options[:engine] = nil
  end

  config.on('-s', '--sql') do
    options[:sql] = true
  end

  config.on('--engine=PATH') do |value|
    options[:engine] = value
  end

  config.on('-m', '--migration', '=VERSION') do |value|
    options[:migration] = value
  end
end
parser.parse!

Squasher.setup(options)
case ARGV.first
when /\A\d{4}/ then Squasher.squash(ARGV.first)
when 'clean' then Squasher.clean
else
  Squasher.tell(:usage, version: Squasher::VERSION)
end
